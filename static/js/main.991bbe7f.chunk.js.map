{"version":3,"sources":["components/Loader/Loader.js","components/QuestDetails/QuestDetails.js","components/Map/Map.js","components/QuestCurrentTask/QuestCurrentTask.js","components/QuestTasks/QuestTasks.js","components/AboutQuest/AboutQuest.js","components/AboutUs/AboutUs.js","components/QuestFinish/QuestFinish.js","components/NavBar/NavBar.js","components/Footer/Footer.js","components/Layout/Layout.js","components/Carousel/ReactsrapCarousel.js","components/QuestCard/QuestCard.js","components/QuestAreaCard/QuestAreaCard.js","containers/HomePage/HomePage.js","components/QuestAreaDetails/QuestAreaDetails.js","components/MapArea/MapArea.js","components/QuestAreaTasks/QuestAreaTasks.js","App.js","registerServiceWorker.js","store/reducer.js","index.js"],"names":["Loader","className","QuestDetails","props","handleStartQuest","onAnswer","history","push","match","params","id","state","quest","loading","this","getQuest","console","log","axios","get","then","response","data","onTitle","title","setState","error","vacancy","window","scrollTo","message","city","src","img2","alt","description","time","style","marginLeft","type","onClick","Component","connect","dispatch","value","Map","mapRef","React","myCoordinate","map","start","setTimeout","refresh","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","go","H","platform","service","Platform","apikey","coordinates","currentCoors","c","defaultLayers","createDefaultLayers","center","coordinate","length","current","vector","normal","zoom","ui","UI","createDefault","mapEvents","mapevents","MapEvents","Behavior","marker","Marker","addObject","addEventListener","evt","bubble","InfoBubble","content","addBubble","i","routingParameters","onResult","result","routes","sections","forEach","section","linestring","geo","LineString","fromFlexiblePolyline","polyline","routeOutline","Polyline","lineWidth","strokeColor","lineTailCap","lineHeadCap","routeArrows","fillColor","lineDash","routeLine","Group","addObjects","getRoutingService","calculateRoute","alert","addLayer","traffic","trafficincidents","dispose","coordinate2","undefined","objs","getObjects","isRefresh","routing2","onRefresh","ref","height","onCoors","isRight","loadingTask","isDesc","onFlag","onDesc","onLoading","useState","correct","setCorrect","task","x","y","count","question","coors","marginTop","FormControl","component","RadioGroup","aria-label","name","answer","onChange","event","target","right","toString","FormControlLabel","control","Radio","label","var_1","var_2","var_3","var_4","QuestTasks","handleClick","errorMes","onCountRightAns","countRightAns","isNext","buttonText","curId","tasks","getCurTask","curTask","getTasks","includes","temp","Object","keys","key","index","onCountQuestions","withRouter","useHistory","AboutUs","QuestFinish","questName","countQuestions","NavBar","anchorEl","mobileMoreAnchorEl","profileMenuAnchorEl","handleMenuOpen","currentTarget","handleMenuClose","handleMobileMenuClose","handleMobileMenuOpen","handleProfileMenuOpen","handleProfileMenuClose","goToSearchPage","e","preventDefault","handleClickHomePage","handleClickEnterPage","signInRedirect","handleGoToProfile","classes","renderProfileOptions","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","renderProfileButton","sectionDesktop","user","renderMobileMenu","root","AppBar","Toolbar","Typography","variant","noWrap","onSubmit","search","InputBase","placeholder","inputRoot","input","inputInput","inputProps","sectionMobile","IconButton","edge","aria-controls","mobileMenuId","aria-haspopup","color","withStyles","theme","flexGrow","navbarBackgroundColor","backgroundColor","menuButton","marginRight","spacing","cursor","display","fontWeight","fontFamily","breakpoints","up","borderRadius","shape","fade","palette","common","white","width","searchIcon","pointerEvents","alignItems","justifyContent","padding","paddingLeft","transition","transitions","create","Footer","document","getElementById","handleQuest","toggleNavbar","bind","collapsed","results","margin","NavLink","tag","Link","to","href","Layout","children","displayName","items","altText","header","Carousel","UncontrolledCarousel","useStyles","makeStyles","screen","availWidth","maxWidth","zIndex","media","paddingTop","expand","transform","duration","shortest","expandOpen","avatar","cardHeader","boxShadow","paddingBottom","textAlign","useRef","expanded","setExpanded","flag","setQuest","renderOptions","Card","CardHeader","Avatar","slice","action","pagePurpose","CardContent","rating","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","HomePage","questsTourism","questsPopular","questsRiddle","questsTeam","loadingQuestsTourism","loadingQuestsPopular","loadingQuestsRiddle","loadingQuestsTeam","getQuestsTourism","getQuestsPopular","getQuestsRiddle","getQuestsTeam","onQuestsTourism","t","setPop","q","onQuestsRiddle","cardsCount","Grid","container","justify","sort","v1","v2","Math","round","item","onQuestsPopular","onQuestsTeam","QuestAreaDetails","img1","MapArea","teaser","lat1","lng1","lat2","lng2","dLat","deg2rad","dLon","a","sin","cos","atan2","sqrt","deg","PI","refreshMap","getDistanceFromLatLonInM","markerTeaser","markerGPS","distance","radius","random","newCircle","Circle","Point","removeObjects","Promise","resolve","description_task","App","exact","path","AboutQuest","QuestAreaTasks","isLocalhost","location","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","initialState","role","reducer","newState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","baseUrl","getElementsByTagName","getAttribute","rootElement","ReactDOM","render","basename","URL","process","origin","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.991bbe7f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Loader.css\"\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"lds-roller\">\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n        </div>\r\n    )\r\n}\r\nexport default Loader","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./QuestDetails.css\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass QuestDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quest: {},\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuest()\r\n    }\r\n\r\n    \r\n    \r\n    getQuest() {\r\n        const id = this.props.match.params.id;\r\n        //const url = `${APP_URL_DEV}/api/vacancies/${id}`;\r\n        console.log(id)\r\n        axios\r\n            .get(`https://js-here.firebaseio.com/quests/tourism/${id}.json`)\r\n            .then((response) => response.data)\r\n            .then(\r\n                (data) => {\r\n                    this.props.onTitle(data.title)\r\n                    this.setState({quest: data, loading: false})\r\n                }\r\n            );\r\n        \r\n    }\r\n\r\n    handleStartQuest = () => {\r\n        this.props.onAnswer(null)\r\n        this.props.history.push(`/quests/tourism/${this.props.match.params.id}/questions`)\r\n    };\r\n\r\n    render() {\r\n        const {vacancy, error} = this.state;\r\n        window.scrollTo(0, 0);\r\n        if (error) return <div>Error: {error.message}</div>;\r\n        return (\r\n            <div className=\"container-vac-details\">\r\n                {this.state.loading ? <Loader/>\r\n                    : <>\r\n                        <h3 className=\"header-h\">{this.state.quest.title}</h3>\r\n                        <h5 className=\"city\">{this.state.quest.city}</h5>\r\n                        <div className=\"item-vacancy\">\r\n                            <img src={this.state.quest.img2} className=\"quest-img\" alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"item-vacancy\">\r\n                            <b> Описание квеста:</b>\r\n                            <br/> {this.state.quest.description}\r\n                        </div>\r\n                        <div className=\"item-vacancy\">\r\n                            <b>Время прохождения:</b> {this.state.quest.time}\r\n                        </div>\r\n                        <div className=\"row div-row\" style={{marginLeft: \"0\"}}>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"button-start-quest\"\r\n                                onClick={this.handleStartQuest}\r\n                            >\r\n                                Начать квест\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        onAnswer: value => dispatch({type: \"answer\", value: value}),\r\n        onTitle: value => dispatch({type: \"questName\", value: value})\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispachToProps)(QuestDetails);\r\n","import * as React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { createRef } from 'react';\r\n\r\nclass Map extends React.Component {\r\n    mapRef = React.createRef();\r\n\r\n    state = {\r\n        myCoordinate: null,\r\n        map: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.start();\r\n        setTimeout(() => this.refresh(), 900);\r\n    }\r\n\r\n    start() {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                this.setState({\r\n                    myCoordinate: {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude,\r\n                        description: \"Моя позиция\"\r\n                    }\r\n                });\r\n                setTimeout(() => this.go(), 700);\r\n            });\r\n        } else {\r\n            console.error(\"Geolocation is not supported by this browser!\");\r\n        }\r\n    }\r\n\r\n    go() {\r\n        const H = window.H;\r\n        const platform = new H.service.Platform({\r\n            apikey: \"ksTpcItxmjBO_GYj0B0e-ZQY8MLCuTPmPDI5nvz_ZKc\"\r\n        });\r\n\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            console.log(position);\r\n        });\r\n        var coordinates = [\r\n            this.state.myCoordinate\r\n        ]\r\n        this.props.currentCoors.map(c => {\r\n            coordinates.push(c)\r\n        })\r\n\r\n        const defaultLayers = platform.createDefaultLayers();\r\n        const center = {lat: 0, lng: 0};\r\n        coordinates.map(coordinate => {\r\n            center.lat += coordinate.lat / coordinates.length;\r\n            center.lng += coordinate.lng / coordinates.length;\r\n        });\r\n        const map = new H.Map(\r\n            this.mapRef.current,\r\n            defaultLayers.vector.normal.map,\r\n            {\r\n                center: center,\r\n                zoom: 13,\r\n            }\r\n        );\r\n\r\n        const ui = H.ui.UI.createDefault(map, defaultLayers, 'ru-RU');\r\n        const mapEvents = new H.mapevents.MapEvents(map);\r\n        const behavior = new H.mapevents.Behavior(mapEvents);\r\n\r\n        coordinates.map(coordinate => {\r\n            const marker = new H.map.Marker(coordinate);\r\n            map.addObject(marker);\r\n            marker.addEventListener('tap', function (evt) {\r\n                const bubble = new H.ui.InfoBubble(coordinate, {\r\n                    content: `<p>${coordinate.description}</p>`\r\n                });\r\n                ui.addBubble(bubble);\r\n            })\r\n        });\r\n\r\n        for (var i = 0; i < coordinates.length - 1; i++) {\r\n            console.log(i);\r\n            var routingParameters = {\r\n                'routingMode': 'fast',\r\n                'transportMode': 'car',\r\n                'origin': coordinates[i].lat + ',' + coordinates[i].lng,\r\n                'destination': coordinates[i + 1].lat + ',' + coordinates[i + 1].lng,\r\n                'return': 'polyline'\r\n            };\r\n            if (this.props.currentCoors.length > 1) {\r\n                var onResult = function (result) {\r\n                    if (result.routes.length) {\r\n                        result.routes[0].sections.forEach((section) => {\r\n                            let linestring = H.geo.LineString.fromFlexiblePolyline(section.polyline);\r\n                            var routeOutline = new H.map.Polyline(linestring, {\r\n                                style: {\r\n                                    lineWidth: 10,\r\n                                    strokeColor: 'rgba(255, 0, 0, 0.7)',\r\n                                    lineTailCap: 'arrow-tail',\r\n                                    lineHeadCap: 'arrow-head'\r\n                                }\r\n                            });\r\n                            var routeArrows = new H.map.Polyline(linestring, {\r\n                                style: {\r\n                                    lineWidth: 7,\r\n                                    fillColor: 'white',\r\n                                    strokeColor: 'rgba(255, 255, 255, 1)',\r\n                                    lineDash: [0, 1],\r\n                                    lineTailCap: 'arrow-tail',\r\n                                    lineHeadCap: 'arrow-head'\r\n                                }\r\n                            }\r\n                            );\r\n                            var routeLine = new H.map.Group();\r\n                            routeLine.addObjects([routeOutline, routeArrows]);\r\n                            map.addObjects([routeLine]);\r\n                        });\r\n                    }\r\n\r\n                }\r\n            }\r\n            else {\r\n                var onResult = function (result) {\r\n                    if (result.routes.length) {\r\n                        result.routes[0].sections.forEach((section) => {\r\n                            let linestring = H.geo.LineString.fromFlexiblePolyline(section.polyline);\r\n                            var routeOutline = new H.map.Polyline(linestring, {\r\n                                style: {\r\n                                    lineWidth: 10,\r\n                                    strokeColor: 'rgba(0, 128, 255, 0.7)',\r\n                                    lineTailCap: 'arrow-tail',\r\n                                    lineHeadCap: 'arrow-head'\r\n                                }\r\n                            });\r\n                            var routeArrows = new H.map.Polyline(linestring, {\r\n                                style: {\r\n                                    lineWidth: 7,\r\n                                    fillColor: 'white',\r\n                                    strokeColor: 'rgba(255, 255, 255, 1)',\r\n                                    lineDash: [0, 1],\r\n                                    lineTailCap: 'arrow-tail',\r\n                                    lineHeadCap: 'arrow-head'\r\n                                }\r\n                            }\r\n                            );\r\n                            var routeLine = new H.map.Group();\r\n                            routeLine.addObjects([routeOutline, routeArrows]);\r\n                            map.addObjects([routeLine]);\r\n                        });\r\n                    }\r\n\r\n                }\r\n            }\r\n            var router = platform.getRoutingService(null, 8);\r\n            router.calculateRoute(routingParameters, onResult,\r\n                function (error) {\r\n                    alert(error.message);\r\n                });\r\n        }\r\n\r\n        map.addLayer(defaultLayers.vector.normal.traffic);\r\n        map.addLayer(defaultLayers.vector.normal.trafficincidents);\r\n\r\n        this.setState({map});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.map !== null)\r\n            this.state.map.dispose();\r\n    }\r\n\r\n    routing1() {\r\n        //this.state.map.removeObject(this.state.map.getObjects()[this.state.map.getObjects().length - 1])\r\n        const H = window.H;\r\n        \r\n        const platform = new H.service.Platform({\r\n            apikey: \"ksTpcItxmjBO_GYj0B0e-ZQY8MLCuTPmPDI5nvz_ZKc\"\r\n        });\r\n        const defaultLayers = platform.createDefaultLayers();\r\n        const ui = H.ui.UI.createDefault(this.state.map, defaultLayers, 'ru-RU');\r\n        const coordinate = this.props.currentCoors[this.props.currentCoors.length - 2]\r\n        var coordinate2 = null\r\n        if (this.props.currentCoors[this.props.currentCoors.length - 3] === undefined) {\r\n            coordinate2 = this.state.myCoordinate\r\n        }\r\n        else coordinate2 = this.props.currentCoors[this.props.currentCoors.length - 3]\r\n        \r\n        var routingParameters = {\r\n            'routingMode': 'fast',\r\n            'transportMode': 'car',\r\n            'origin': coordinate2.lat + ',' + coordinate2.lng,\r\n            'destination': coordinate.lat + ',' + coordinate.lng,\r\n            'return': 'polyline'\r\n        };\r\n        var onResult = (result) => {\r\n            if (result.routes.length) {\r\n                result.routes[0].sections.forEach((section) => {\r\n                    let linestring = H.geo.LineString.fromFlexiblePolyline(section.polyline);\r\n                    var routeOutline = new H.map.Polyline(linestring, {\r\n                        style: {\r\n                            lineWidth: 10,\r\n                            strokeColor: 'rgba(220,3,3,0.7)',\r\n                            lineTailCap: 'arrow-tail',\r\n                            lineHeadCap: 'arrow-head'\r\n                        }\r\n                    });\r\n                    var routeArrows = new H.map.Polyline(linestring, {\r\n                            style: {\r\n                                lineWidth: 7,\r\n                                fillColor: 'white',\r\n                                strokeColor: 'rgba(255, 255, 255, 1)',\r\n                                lineDash: [0, 1],\r\n                                lineTailCap: 'arrow-tail',\r\n                                lineHeadCap: 'arrow-head'\r\n                            }\r\n                        }\r\n                    );\r\n                    var routeLine = new H.map.Group();\r\n                    routeLine.addObjects([routeOutline, routeArrows]);\r\n                    this.state.map.addObjects([routeLine]);\r\n                });\r\n            }\r\n\r\n        }\r\n        var router = platform.getRoutingService(null, 8);\r\n        router.calculateRoute(routingParameters, onResult,\r\n            function (error) {\r\n                alert(error.message);\r\n            });\r\n\r\n//        this.props.onRefresh(false)\r\n    }\r\n\r\n    routing2() {\r\n        var objs = this.state.map.getObjects()[this.state.map.getObjects().length - 1];\r\n        console.log(objs)\r\n        const H = window.H;\r\n        const marker = new H.map.Marker(this.props.currentCoors[this.props.currentCoors.length - 1]);\r\n\r\n        const platform = new H.service.Platform({\r\n            apikey: \"ksTpcItxmjBO_GYj0B0e-ZQY8MLCuTPmPDI5nvz_ZKc\"\r\n        });\r\n        const defaultLayers = platform.createDefaultLayers();\r\n        const ui = H.ui.UI.createDefault(this.state.map, defaultLayers, 'ru-RU');\r\n        console.log(this.props.currentCoors[this.props.currentCoors.length - 1])\r\n        const coordinate = this.props.currentCoors[this.props.currentCoors.length - 1]\r\n        marker.addEventListener('tap', function (evt) {\r\n            const bubble = new H.ui.InfoBubble(coordinate, {\r\n                content: `<p>${coordinate.description}</p>`\r\n            });\r\n            ui.addBubble(bubble);\r\n        })\r\n\r\n        var routingParameters = {\r\n            'routingMode': 'fast',\r\n            'transportMode': 'car',\r\n            'origin': this.props.currentCoors[this.props.currentCoors.length - 2].lat + ',' + this.props.currentCoors[this.props.currentCoors.length - 2].lng,\r\n            'destination': coordinate.lat + ',' + coordinate.lng,\r\n            'return': 'polyline'\r\n        };\r\n        var onResult = (result) => {\r\n            if (result.routes.length) {\r\n                result.routes[0].sections.forEach((section) => {\r\n                    let linestring = H.geo.LineString.fromFlexiblePolyline(section.polyline);\r\n                    var routeOutline = new H.map.Polyline(linestring, {\r\n                        style: {\r\n                            lineWidth: 10,\r\n                            strokeColor: 'rgba(0, 128, 255, 0.7)',\r\n                            lineTailCap: 'arrow-tail',\r\n                            lineHeadCap: 'arrow-head'\r\n                        }\r\n                    });\r\n                    var routeArrows = new H.map.Polyline(linestring, {\r\n                            style: {\r\n                                lineWidth: 7,\r\n                                fillColor: 'white',\r\n                                strokeColor: 'rgba(255, 255, 255, 1)',\r\n                                lineDash: [0, 1],\r\n                                lineTailCap: 'arrow-tail',\r\n                                lineHeadCap: 'arrow-head'\r\n                            }\r\n                        }\r\n                    );\r\n                    var routeLine = new H.map.Group();\r\n                    routeLine.addObjects([routeOutline, routeArrows]);\r\n                    this.state.map.addObjects([routeLine]);\r\n                });\r\n            }\r\n\r\n        }\r\n        var router = platform.getRoutingService(null, 8);\r\n        router.calculateRoute(routingParameters, onResult,\r\n            function (error) {\r\n                alert(error.message);\r\n            });\r\n\r\n        this.state.map.addObject(marker);\r\n        \r\n    }\r\n\r\n    refresh() {\r\n        if (this.props.isRefresh) {\r\n            //this.routing1()\r\n            this.routing2()\r\n            //this.mapRef = createRef()\r\n            //this.mapRef.current = null\r\n            //this.start()\r\n            this.props.onRefresh(false)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div ref={this.mapRef} style={{height: \"500px\"}}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        onCoors: value => dispatch({type: \"currentCoors\", value: value}),\r\n        onRefresh: value => dispatch({type: \"isRefresh\", value: value}),\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentCoors: state.currentCoors,\r\n        isRefresh: state.isRefresh,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Map);","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./QuestCurrentTask.css\";\r\nimport Map from \"../Map/Map\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {connect} from \"react-redux\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nconst QuestCurrentTask = (props) => {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         quest: {},\r\n    //         ans: null,\r\n    //         errorMes: null,\r\n    //         correct: false,\r\n    //         loading: true\r\n    //     };\r\n    // }\r\n\r\n    // componentDidMount() {\r\n    //     //this.getVacancy()\r\n    //     this.props.onDesc(true)\r\n    // }\r\n\r\n    // getVacancy()\r\n    // {\r\n\r\n        //const id = this.props.match.params.id;\r\n        //const url = `${APP_URL_DEV}/api/vacancies/${id}`;\r\n\r\n        // axios\r\n        //     .get(url)\r\n        //     .then((response) => response.data)\r\n        //     .then(\r\n        //         (data) =>\r\n        //             this.setState({\r\n        //                 vacancy: data,\r\n        //             }),\r\n        //         (error) =>\r\n        //             this.setState({\r\n        //                 error: error,\r\n        //             })\r\n        //     );\r\n    //}\r\n\r\n    // handleChangeAns = (event) => {\r\n    //     this.props.onAnswer(event.target.value)\r\n    //     if (event.target.value === this.props.task.right.toString()) {\r\n    //         this.props.onFlag(true);\r\n    //         this.setState({correct: true})\r\n    //     } else {\r\n    //         this.props.onFlag(false);\r\n    //         this.setState({correct: false})\r\n    //     }\r\n    // }\r\n    const [correct, setCorrect] = React.useState(false)\r\n    const [loading, setLoading] = React.useState(this)\r\n    const handleChangeAns = (event) => {\r\n        props.onAnswer(event.target.value)\r\n        if (event.target.value === props.task.right.toString()) {\r\n            props.onFlag(true);\r\n            setCorrect(true)\r\n        } else {\r\n            props.onFlag(false);\r\n            setCorrect(false)\r\n        }\r\n    }\r\n    const coordinates = {\r\n        lat: props.task.x,\r\n        lng: props.task.y,\r\n        description: props.task.title\r\n    }\r\n\r\n    setTimeout(() => props.onLoading(false), 600)\r\n    //setTimeout(() => setLoading(false), 600)\r\n    //new Promise(resolve => setTimeout(setLoading(false), 600));\r\n    return (\r\n        <div>\r\n            {props.loadingTask\r\n                ? <Loader/>\r\n                :\r\n                <>\r\n                    <h3 className=\"header-task\">Задание {props.task.id + 1} из {props.task.count}</h3>\r\n                    <h5 className=\"question\">{props.task.question}</h5>\r\n                    <Map coors={coordinates}/>\r\n                    {props.isDesc\r\n                        ?\r\n                        <div className=\"row div-row\" style={{marginLeft: \"0\", marginTop: \"20px\"}}>\r\n                            <FormControl component=\"fieldset\">\r\n                                <h5 className=\"question\">Варианты ответа:</h5>\r\n                                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={props.answer}\r\n                                            onChange={handleChangeAns}>\r\n                                    <FormControlLabel value=\"1\" control={<Radio/>} label={props.task.var_1}/>\r\n                                    <FormControlLabel value=\"2\" control={<Radio/>} label={props.task.var_2}/>\r\n                                    <FormControlLabel value=\"3\" control={<Radio/>} label={props.task.var_3}/>\r\n                                    <FormControlLabel value=\"4\" control={<Radio/>} label={props.task.var_4}/>\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </div>\r\n                        :\r\n                        <div className=\"row div-row\" style={{marginLeft: \"0\", marginTop: \"20px\"}}>\r\n                            {correct\r\n                                ? <h5 className=\"error-description-green\">Вы ответили правильно!</h5>\r\n                                : <h5 className=\"error-description-red\">Вы ответили неправильно!</h5>\r\n                            }\r\n                            <br/><h6 className=\"question-description\">{props.task.description}</h6>\r\n                        </div>\r\n                    }\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        onFlag: value => dispatch({type: \"isRight\", value: value}),\r\n        onAnswer: value => dispatch({type: \"answer\", value: value}),\r\n        onDesc: value => dispatch({type: \"isDesc\", value: value}),\r\n        onCoors: value => dispatch({ type: \"currentCoors\", value: value }),\r\n        onLoading: value => dispatch({ type: \"loadingTask\", value: value }),\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isRight: state.isRight,\r\n        loadingTask: state.loadingTask,\r\n        isDesc: state.isDesc,\r\n        currentCoors: state.currentCoors,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(QuestCurrentTask);\r\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./QuestTasks.css\";\r\nimport Map from \"../Map/Map\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {connect} from \"react-redux\";\r\nimport QuestCurrentTask from \"../QuestCurrentTask/QuestCurrentTask\";\r\n\r\nclass QuestTasks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            errorMes: false,\r\n            buttonText: \"Ответить на вопрос\",\r\n            isNext: false,\r\n            tasks: [],\r\n            curTask: {},\r\n            curId: 0\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTasks();\r\n    }\r\n\r\n    getCurTask() {\r\n        const id = this.props.match.params.id\r\n        var temp = []\r\n        axios\r\n            .get(`https://js-here.firebaseio.com/quests/tourism/${id}/tasks/${this.state.tasks[this.state.curId].id}.json`)\r\n            .then((response) => response.data)\r\n            .then(\r\n                (data) => {\r\n                    this.setState({curTask: data})\r\n                    this.setState({\r\n                        curTask: {\r\n                            ...this.state.curTask,\r\n                            id: this.state.curId,\r\n                            count: this.state.tasks.length\r\n                        }\r\n                    })\r\n                    this.props.onLoading(true);\r\n                    const coordinates = {\r\n                        lat: data.x,\r\n                        lng: data.y,\r\n                        description: data.title\r\n                    }\r\n                    if(!this.props.currentCoors.includes()) {\r\n                        this.props.currentCoors.push(coordinates)\r\n                        this.props.onCoors(this.props.currentCoors)\r\n                        if(this.state.curId !== 0)\r\n                            this.props.onRefresh(true);\r\n                    }\r\n                    \r\n                }\r\n            );\r\n    }\r\n\r\n    getTasks() {\r\n        const id = this.props.match.params.id\r\n        var temp = []\r\n        this.props.onCoors([])\r\n        axios\r\n            .get(`https://js-here.firebaseio.com/quests/tourism/${id}/tasks.json`)\r\n            .then((response) => response.data)\r\n            .then(\r\n                (data) => {\r\n                    Object.keys(data).forEach((key, index) => {\r\n                        temp.push({\r\n                            id: key,\r\n                            index\r\n                        })\r\n                    })\r\n                    this.setState({tasks: temp})\r\n                    this.props.onCountQuestions(temp.length)\r\n                    this.getCurTask()\r\n                    console.log(temp)\r\n                }\r\n            );\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (this.props.answer === null)\r\n            this.setState({errorMes: true})\r\n        else {\r\n            this.setState({errorMes: false})\r\n            this.props.onDesc(true)\r\n            if (this.props.isRight)\r\n                this.props.onCountRightAns(this.props.countRightAns + 1)\r\n            if (this.state.isNext) {\r\n                this.setState({ buttonText: \"Ответить на вопрос\", isNext: false })\r\n                this.props.onAnswer(null);\r\n                if (this.state.curId === this.state.tasks.length - 1)\r\n                    this.props.history.push(`/quests/tourism/${this.props.match.params.id}/questions/result`)\r\n                else {\r\n                    this.state.curId = this.state.curId + 1\r\n                    this.getCurTask()\r\n                }\r\n            } else {\r\n                if (this.state.curId === this.state.tasks.length - 1)\r\n                    this.setState({buttonText: \"Завершить квест\", isNext: true})\r\n                else this.setState({buttonText: \"Следующее задание\", isNext: true})\r\n                this.props.onFlag(false)\r\n                this.props.onDesc(false)\r\n            }\r\n\r\n            //this.props.history.push(window.location.href + \"/\")\r\n        }\r\n        \r\n    };\r\n\r\n    render() {\r\n        const {curTask, error} = this.state;\r\n        \r\n        if (error) return <div>Error: {error.message}</div>;\r\n        return (\r\n            <div className=\"container-vac-details\">\r\n                <QuestCurrentTask task={curTask}/>\r\n                {this.state.errorMes ? <div className=\"error\">Выберите вариант ответа</div> : null}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"button-start-quest\"\r\n                    onClick={this.handleClick}\r\n                >\r\n                    {this.state.buttonText}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        onFlag: value => dispatch({type: \"isRight\", value: value}),\r\n        onDesc: value => dispatch({type: \"isDesc\", value: value}),\r\n        onCountRightAns: value => dispatch({type: \"countRightAns\", value: value}),\r\n        onCountQuestions: value => dispatch({type: \"countQuestions\", value: value}),\r\n        onCoors: value => dispatch({type: \"currentCoors\", value: value}),\r\n        onRefresh: value => dispatch({ type: \"isRefresh\", value: value }),\r\n        onLoading: value => dispatch({ type: \"loadingTask\", value: value }),\r\n        onAnswer: value => dispatch({ type: \"answer\", value: value }),\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isRight: state.isRight,\r\n        answer: state.answer,\r\n        countRightAns: state.countRightAns,\r\n        currentCoors: state.currentCoors,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(QuestTasks);\r\n","import React from \"react\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport \"../../custom.css\";\r\nimport \"./AboutQuest.css\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {NavLink} from \"reactstrap\";\r\n\r\nconst AboutQuest = props => {\r\n    const history = useHistory();\r\n    window.scrollTo(0, 0);\r\n    return (\r\n        <div className=\"div\">\r\n            <div className=\"header-how\">Что такое геоквест?</div>\r\n            <p>Геоквест — это увлекательная игра — путешествие, состоящая из нескольких этапов,\r\n                на каждом из которых Вам понадобится посетить контрольные пункты, найти\r\n                ответы на вопросы (памятники, таблички, архитектурные объекты и т.п.).\r\n            </p>\r\n            <p>Геоквест позволит Вам познакомиться с новым городом в игровой форме.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\nexport default withRouter(AboutQuest);\r\n","import React from \"react\";\r\nimport \"../../custom.css\";\r\nimport \"./AboutUs.css\";\r\n\r\n\r\nfunction AboutUs (){\r\n    window.scrollTo(0,0);\r\n    return (\r\n        <div className=\"div\">\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default AboutUs;\r\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./QuestFinish.css\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass QuestFinish extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quest: {},\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        const {error} = this.state;\r\n        window.scrollTo(0, 0);\r\n        if (error) return <div>Error: {error.message}</div>;\r\n        return (\r\n            <div className=\"container-vac-details\">\r\n                <h3 className=\"header-h\">Квест \"{this.props.questName}\" пройден!</h3>\r\n                <h5 className=\"city\">Ваш результат: {this.props.countRightAns} / {this.props.countQuestions}</h5>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        onAnswer: value => dispatch({type: \"answer\", value: value})\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        countRightAns: state.countRightAns,\r\n        countQuestions: state.countQuestions,\r\n        questName: state.questName,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(QuestFinish);\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { fade } from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport \"./NavBar.css\";\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  navbarBackgroundColor: {\r\n    backgroundColor: 'rgb(20, 102, 202)'\r\n    // backgroundColor: \"#001970\", //theme.palette.primary.dark\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    cursor: \"pointer\",\r\n    color: \"white\",\r\n    display: \"none\",\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Black Square\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    color: \"white\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    paddingLeft: \"8px\",\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 123,\r\n      \"&:focus\": {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    color: \"white\",\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    color: \"white\",\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n});\r\n\r\nclass NavBar extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n    mobileMoreAnchorEl: null,\r\n    profileMenuAnchorEl: null,\r\n  };\r\n\r\n  handleMenuOpen = (event) => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleMenuClose = () => {\r\n    this.setState({ anchorEl: null });\r\n    this.handleMobileMenuClose();\r\n  };\r\n\r\n  handleMobileMenuOpen = (event) => {\r\n    this.setState({ mobileMoreAnchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleMobileMenuClose = () => {\r\n    this.setState({ mobileMoreAnchorEl: null });\r\n  };\r\n  handleProfileMenuOpen = (event) => {\r\n    this.setState({ profileMenuAnchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleProfileMenuClose = () => {\r\n    this.setState({ profileMenuAnchorEl: null });\r\n  };\r\n\r\n  goToSearchPage = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id === \"desktop\") {\r\n      //this.props.onSearch(document.getElementById(\"search-str-desktop\").value);\r\n      //this.props.history.push(\"/searchvac/\" + this.props.term);\r\n    }\r\n    if (e.target.id === \"mobile\") {\r\n      //this.props.onSearch(document.getElementById(\"search-str-mobile\").value);\r\n      //this.props.history.push(\"/searchvac/\" + this.props.term);\r\n    }\r\n  };\r\n  handleClickHomePage = (e) => {\r\n    this.handleMenuClose();\r\n    this.props.history.push(\"/\");\r\n  };\r\n  handleClickEnterPage = (e) => {\r\n    this.handleMenuClose();\r\n    this.signInRedirect();\r\n  };\r\n  handleGoToProfile = (e) => {\r\n    this.handleProfileMenuClose();\r\n    this.handleMenuClose();\r\n    // if (this.props.user.profile.role === \"Student\")\r\n    //   this.props.history.push(\"/profile\")\r\n    //   else\r\n    //   this.props.history.push('/companyProfile')\r\n  };\r\n  render() {\r\n    const { anchorEl, mobileMoreAnchorEl, profileMenuAnchorEl } = this.state;\r\n    const { classes } = this.props;\r\n    const renderProfileOptions = (\r\n      <Menu\r\n        anchorEl={profileMenuAnchorEl}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        keepMounted\r\n        id=\"primary-search-account-menu\"\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={Boolean(profileMenuAnchorEl)}\r\n        onClose={this.handleProfileMenuClose}\r\n      >\r\n        <MenuItem onClick={this.handleGoToProfile}>Профиль</MenuItem>\r\n        <MenuItem >Выйти</MenuItem>\r\n      </Menu>\r\n    );\r\n    const renderProfileButton = (\r\n      <div className={classes.sectionDesktop}>\r\n        {!this.props.user ? (\r\n          <div className=\"signInBtn\" onClick={this.signInRedirect}>\r\n            Войти\r\n          </div>\r\n        ) : (\r\n          <AccountCircle\r\n            className=\"account-circle\"\r\n            onClick={this.handleProfileMenuOpen}\r\n          ></AccountCircle>\r\n        )}\r\n      </div>\r\n    );\r\n    const renderMobileMenu = (\r\n      <Menu\r\n        anchorEl={mobileMoreAnchorEl}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        id=\"primary-search-account-menu-mobile\"\r\n        keepMounted\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={Boolean(mobileMoreAnchorEl)}\r\n        onClose={this.handleMobileMenuClose}\r\n      >\r\n        <MenuItem onClick={this.handleClickHomePage}>Главная</MenuItem>\r\n        {!this.props.user ? (\r\n          <MenuItem onClick={this.handleClickEnterPage}>Войти</MenuItem>\r\n        ) : (\r\n          <>\r\n            <MenuItem onClick={this.handleGoToProfile}>Профиль</MenuItem>\r\n            <MenuItem>Выйти</MenuItem>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    );\r\n    return (\r\n      <div className={classes.root} id=\"NavBar\">\r\n        <AppBar className=\"navbar-background\" position=\"fixed\">\r\n          <Toolbar>\r\n            {/* <div className={classes.sectionDesktop}>\r\n              <IconButton\r\n                edge=\"start\"\r\n                className={classes.menuButton}\r\n                aria-label=\"account of current user\"\r\n                aria-controls={this.menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={this.handleMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </div> */}\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              onClick={this.handleClickHomePage}\r\n              noWrap\r\n            >\r\n              <img src={\"./images/logo.png\"} style={{height: \"32px\"}} alt=\"\"/>\r\n            </Typography>\r\n            <div className={classes.sectionDesktop}>\r\n              <form\r\n                className=\"form-inline\"\r\n                id=\"desktop\"\r\n                onSubmit={this.goToSearchPage}\r\n              >\r\n                <div className={classes.search}>\r\n                  <InputBase\r\n                    placeholder=\"Поиск квестов\"\r\n                    id=\"search-str-desktop\"\r\n                    classes={{\r\n                      root: classes.inputRoot,\r\n                      input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ \"aria-label\": \"search\" }}\r\n                  />\r\n                </div>\r\n                <button className=\"button-search\" type=\"submit\">\r\n                  Поиск\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <div className={classes.sectionMobile}>\r\n              <IconButton\r\n                edge=\"start\"\r\n                aria-label=\"show more\"\r\n                aria-controls={this.mobileMenuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={this.handleMobileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <form\r\n                className=\"form-inline\"\r\n                id=\"mobile\"\r\n                onSubmit={this.goToSearchPage}\r\n              >\r\n                <div className={classes.search}>\r\n                  <InputBase\r\n                    placeholder=\"Поиск вакансий\"\r\n                    id=\"search-str-mobile\"\r\n                    classes={{\r\n                      root: classes.inputRoot,\r\n                      input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ \"aria-label\": \"search\" }}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {renderProfileButton}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {renderMobileMenu}\r\n        {renderProfileOptions}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(\r\n  withStyles(styles)(NavBar)\r\n);\r\n","import React, {Component} from \"react\";\r\nimport {NavLink} from \"reactstrap\";\r\nimport {withRouter, Link} from \"react-router-dom\";\r\nimport \"../../custom.css\";\r\nimport \"./Footer.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nclass Footer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.state = {\r\n            collapsed: true,\r\n            results: null,\r\n        };\r\n    }\r\n\r\n    toggleNavbar() {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    }\r\n\r\n    goToSearchPage = (e) => {\r\n        e.preventDefault();\r\n        this.props.history.push(\r\n            \"/searchvac/\" + document.getElementById(\"search_str\").value\r\n        );\r\n    };\r\n\r\n\r\n    handleQuest = () => {\r\n        this.props.history.push(\"/aboutquest\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"footer-background\">\r\n                <div className=\"footer-row row\" style={{margin: \"0 auto\"}}>\r\n                    <div className=\"col-sm-3 footer-colm\">\r\n                        <h6 className=\"footer-headers\">MayDay</h6>\r\n                        <NavLink tag={Link} className=\"footer-link\" to=\"/\">\r\n                            О проекте\r\n                        </NavLink>\r\n                        <div className=\"footer-link-div\" onClick={this.handleQuest}>\r\n                            Что такое геоквест\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-3 footer-colm\">\r\n                        <h6 className=\"footer-headers\">Вопросы и советы</h6>\r\n                        <NavLink tag={Link} className=\"footer-link\" to=\"/howtomakeresume\">\r\n                            Как пройти квест?\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className=\"col-sm-3 footer-colm\">\r\n                        <h6 className=\"footer-headers\">Контакты</h6>\r\n                        <div className=\"footer-email word\">\r\n                            mayday@gmail.com\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-3 footer-colm\">\r\n                        <h6 className=\"footer-headers\">Социальные сети</h6>\r\n                        <div className=\"footer-link-div\">\r\n                            <a target=\"_blank\" href=\"https://vk.com/studjent\">\r\n                                Мы в Вконтакте\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer-row row\" style={{margin: \"0 auto\"}}>\r\n                    <h6 className=\"footer-copyright\">\r\n                        Copyright 2020 MayDay all rights reserved\r\n                    </h6>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Footer);\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport \"./Layout.css\";\r\nimport Footer from '../Footer/Footer'\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n        <div className=\"main-container\">\r\n            <NavBar className=\"main-navbar\" />\r\n            <div className=\"main-section\">{this.props.children}</div>\r\n            <Footer className=\"main-footer\" />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { UncontrolledCarousel } from \"reactstrap\";\r\nimport \"./ReactstrapCarousel.css\";\r\nconst items = [\r\n  {\r\n    src: \"images/carousel4_.jpg\",\r\n    altText: \"Если ты хочешь хорошо провести вермя и узнать новый город, то наш сайт создан для тебя\",\r\n    header: \"Если ты хочешь хорошо провести вермя и узнать новый город, то наш сайт создан для тебя\",\r\n    key: \"1\",\r\n  },\r\n  {\r\n    src: \"images/carousel2_.jpg\",\r\n    altText: \"GeoQuest поможет Вам выбраться из комнаты!\",\r\n    header: \"GeoQuest поможет Вам выбраться из комнаты!\",\r\n    key: \"2\",\r\n  },\r\n  {\r\n    src: \"images/carousel3_.jpg\",\r\n    altText: \"GeoQuest - отличная возможность для отдыха с семьёй и друзьями\",\r\n    header: \"GeoQuest - отличная возможность для отдыха с семьёй и друзьями\",\r\n    key: \"3\",\r\n  },\r\n];\r\n\r\nconst Carousel = () => <UncontrolledCarousel items={items} />;\r\n\r\nexport default Carousel;\r\n","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport {useEffect} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport \"./QuestCard.css\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: (window.screen.availWidth > 320) ? \"340px\" : \"280px\",\r\n        maxWidth: 350,\r\n        margin: \"5px\",\r\n        zIndex: 0,\r\n        display: \"inline-block\",\r\n        borderRadius: \"10px\"\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\", // 16:9\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        marginLeft: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n        color: \"white\",\r\n        backgroundColor: \"#0095a8\"\r\n    },\r\n    cardHeader: {\r\n        \"&:hover\": {\r\n            cursor: \"pointer\",\r\n        },\r\n    },\r\n    message: {\r\n        backgroundColor: \"white\",\r\n        width: \"95%\",\r\n        borderRadius: \"10px\",\r\n        boxShadow: \"0px 2px 2px #c2bebe\",\r\n        margin: \"auto\",\r\n        paddingTop: \"19px\",\r\n        paddingBottom: \"10px\",\r\n        textAlign: \"center\",\r\n    },\r\n}));\r\n\r\nfunction QuestCard(props) {\r\n    //const imgPath = `images/${setIcon(props.vacancy.sphere)}.png`;\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const classes = useStyles();\r\n    const likeIconRef = React.useRef(null);\r\n    const messageRef = React.useRef(null);\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [state, setState] = React.useState(null);\r\n    const history = useHistory();\r\n    const [flag, setFlag] = React.useState(true);\r\n    const [quest, setQuest] = React.useState(null);\r\n    const id = props.quest.id \r\n    axios\r\n        .get(`https://js-here.firebaseio.com/quests/tourism/${props.quest.id}.json`)\r\n        .then((response) => response.data)\r\n        .then(\r\n            (data) => {\r\n                setQuest(data)              \r\n            }\r\n        );\r\n    \r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setState(null);\r\n    };\r\n\r\n    const renderOptions = (\r\n        <Menu\r\n            anchorEl={state}\r\n            anchorOrigin={{vertical: \"top\", horizontal: \"right\"}}\r\n            keepMounted\r\n            id=\"primary-search-account-menu\"\r\n            transformOrigin={{vertical: \"top\", horizontal: \"right\"}}\r\n            open={Boolean(state)}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem>Удалить</MenuItem>\r\n            <MenuItem>Редактировать</MenuItem>\r\n        </Menu>\r\n    );\r\n    \r\n    return (\r\n        <>\r\n            {flag === true ? (\r\n                <>\r\n                    <Card className={classes.root} id=\"card\">\r\n                        <CardHeader\r\n                            className={classes.cardHeader}\r\n                            avatar={\r\n                                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                    {quest !== null ? quest.city.slice(0,1) : null}\r\n                                </Avatar>\r\n                            }\r\n                            action={\r\n                                <>\r\n                                    {props && props.pagePurpose === \"profile\" ? (\r\n                                        <IconButton aria-label=\"settings\">\r\n                                            <SettingsIcon/>\r\n                                        </IconButton>\r\n                                    ) : null}\r\n                                </>\r\n                            }\r\n                            title={\r\n                                <Typography\r\n                                    onClick={() => history.push(`/quests/tourism/${id}`)}\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                >\r\n                                    {quest !== null ? quest.city : null}\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                        <CardHeader\r\n                            className={classes.cardHeader}\r\n                            onClick={() => history.push(`/quests/tourism/${id}`)}\r\n                            title={\r\n                                <Typography variant=\"h6\" component=\"p\">\r\n                                    {quest !== null ? quest.title : null}\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                        <div\r\n                            onClick={() => history.push(`/quests/tourism/${id}`)}\r\n                            className=\"card-content\"\r\n                        >\r\n                            <CardContent>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                    Время: {quest !== null ? quest.time : null}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardContent>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                    Рейтинг: {quest !== null ? quest.rating : null} / 10\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </div>\r\n                        <CardActions disableSpacing>\r\n\r\n                            <IconButton\r\n                                className={clsx(classes.expand, {\r\n                                    [classes.expandOpen]: expanded,\r\n                                })}\r\n                                onClick={handleExpandClick}\r\n                                aria-expanded={expanded}\r\n                                aria-label=\"show more\"\r\n                            >\r\n                                <ExpandMoreIcon/>\r\n                            </IconButton>\r\n                        </CardActions>\r\n                        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                            <CardContent>\r\n                                <Typography paragraph></Typography>\r\n                                <Typography paragraph>\r\n                                    {quest !== null ? quest.description : null}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Collapse>\r\n                        {renderOptions}\r\n                    </Card>\r\n                </>\r\n            ) : null}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default withRouter(\r\n    (QuestCard)\r\n);\r\n","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport {useEffect} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: (window.screen.availWidth > 320) ? \"340px\" : \"280px\",\r\n        maxWidth: 350,\r\n        margin: \"5px\",\r\n        zIndex: 0,\r\n        display: \"inline-block\",\r\n        borderRadius: \"10px\"\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\", // 16:9\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        marginLeft: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n        color: \"white\",\r\n        backgroundColor: \"#0095a8\"\r\n    },\r\n    cardHeader: {\r\n        \"&:hover\": {\r\n            cursor: \"pointer\",\r\n        },\r\n    },\r\n    message: {\r\n        backgroundColor: \"white\",\r\n        width: \"95%\",\r\n        borderRadius: \"10px\",\r\n        boxShadow: \"0px 2px 2px #c2bebe\",\r\n        margin: \"auto\",\r\n        paddingTop: \"19px\",\r\n        paddingBottom: \"10px\",\r\n        textAlign: \"center\",\r\n    },\r\n}));\r\n\r\nfunction QuestAreaCard(props) {\r\n    //const imgPath = `images/${setIcon(props.vacancy.sphere)}.png`;\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const classes = useStyles();\r\n    const likeIconRef = React.useRef(null);\r\n    const messageRef = React.useRef(null);\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [state, setState] = React.useState(null);\r\n    const history = useHistory();\r\n    const [flag, setFlag] = React.useState(true);\r\n    const [quest, setQuest] = React.useState(null);\r\n    const id = props.quest.id \r\n    axios\r\n        .get(`https://js-here.firebaseio.com/quests/riddle/${props.quest.id}.json`)\r\n        .then((response) => response.data)\r\n        .then(\r\n            (data) => {\r\n                setQuest(data)              \r\n            }\r\n        );\r\n    \r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setState(null);\r\n    };\r\n\r\n    const renderOptions = (\r\n        <Menu\r\n            anchorEl={state}\r\n            anchorOrigin={{vertical: \"top\", horizontal: \"right\"}}\r\n            keepMounted\r\n            id=\"primary-search-account-menu\"\r\n            transformOrigin={{vertical: \"top\", horizontal: \"right\"}}\r\n            open={Boolean(state)}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem>Удалить</MenuItem>\r\n            <MenuItem>Редактировать</MenuItem>\r\n        </Menu>\r\n    );\r\n    \r\n    return (\r\n        <>\r\n            {flag === true ? (\r\n                <>\r\n                    <Card className={classes.root} id=\"card\">\r\n                        <CardHeader\r\n                            className={classes.cardHeader}\r\n                            avatar={\r\n                                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                    {quest !== null ? quest.city.slice(0,1) : null}\r\n                                </Avatar>\r\n                            }\r\n                            action={\r\n                                <>\r\n                                    {props && props.pagePurpose === \"profile\" ? (\r\n                                        <IconButton aria-label=\"settings\">\r\n                                            <SettingsIcon/>\r\n                                        </IconButton>\r\n                                    ) : null}\r\n                                </>\r\n                            }\r\n                            title={\r\n                                <Typography\r\n                                    onClick={() => history.push(`/quests/riddle/${id}`)}\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                >\r\n                                    {quest !== null ? quest.city : null}\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                        <CardHeader\r\n                            className={classes.cardHeader}\r\n                            onClick={() => history.push(`/quests/riddle/${id}`)}\r\n                            title={\r\n                                <Typography variant=\"h6\" component=\"p\">\r\n                                    {quest !== null ? quest.title : null}\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                        <div\r\n                            onClick={() => history.push(`/quests/riddle/${id}`)}\r\n                            className=\"card-content\"\r\n                        >\r\n                            <CardContent>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                    Время: {quest !== null ? quest.time : null}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardContent>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                    Рейтинг: {quest !== null ? quest.rating : null} / 10\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </div>\r\n                        <CardActions disableSpacing>\r\n\r\n                            <IconButton\r\n                                className={clsx(classes.expand, {\r\n                                    [classes.expandOpen]: expanded,\r\n                                })}\r\n                                onClick={handleExpandClick}\r\n                                aria-expanded={expanded}\r\n                                aria-label=\"show more\"\r\n                            >\r\n                                <ExpandMoreIcon/>\r\n                            </IconButton>\r\n                        </CardActions>\r\n                        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                            <CardContent>\r\n                                <Typography paragraph></Typography>\r\n                                <Typography paragraph>\r\n                                    {quest !== null ? quest.description : null}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Collapse>\r\n                        {renderOptions}\r\n                    </Card>\r\n                </>\r\n            ) : null}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default withRouter(\r\n    (QuestAreaCard)\r\n);\r\n","import React, {useRef} from \"react\";\r\nimport axios from \"axios\";\r\nimport RsCarousel from \"../../components/Carousel/ReactsrapCarousel\";\r\nimport QuestCard from \"../../components/QuestCard/QuestCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../../custom.css\";\r\nimport \"./HomePage.css\";\r\nimport QuestAreaCard from \"../../components/QuestAreaCard/QuestAreaCard\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.state = {\r\n            error: null,\r\n            questsTourism: [],\r\n            questsPopular: [],\r\n            questsRiddle: [],\r\n            questsTeam: [],\r\n            loadingQuestsTourism: true,\r\n            loadingQuestsPopular: true,\r\n            loadingQuestsRiddle: true,\r\n            loadingQuestsTeam: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuestsTourism();\r\n        this.getQuestsPopular();\r\n        this.getQuestsRiddle();\r\n        this.getQuestsTeam();\r\n    }\r\n\r\n    getQuestsTourism() {\r\n        var temp = []\r\n        axios\r\n            .get(\"https://js-here.firebaseio.com/quests/tourism.json\")\r\n            .then((response) => response.data)\r\n            .then(\r\n                (data) => {\r\n                    //temp.push(data)\r\n                    Object.keys(data).forEach((key, index) => {\r\n                        temp.push({\r\n                            id: key,\r\n                            index\r\n                        })\r\n                    })\r\n                    this.setState({\r\n                        loadingQuestsTourism: false\r\n                    })\r\n                    //console.log(temp);\r\n                    this.props.onQuestsTourism(temp);\r\n                    \r\n                   \r\n                },\r\n                (error) =>\r\n                    this.setState({\r\n                        error: error,\r\n                    })\r\n            );\r\n    }\r\n\r\n    getQuestsPopular() {\r\n        var temp = []\r\n        axios\r\n            .get(\"https://js-here.firebaseio.com/quests/tourism.json\")\r\n            .then((response) => response.data)\r\n            .then(\r\n                (data) => {\r\n                    //temp.push(data)\r\n                    Object.keys(data).forEach((key, index) => {\r\n                        temp.push({\r\n                            id: key,\r\n                            index\r\n                        })\r\n                    })\r\n                    //console.log(temp);\r\n                    //this.props.onQuestsTourism(temp);\r\n                    temp.map(t => {\r\n                        this.props.questsPopular.push(t)\r\n                    })\r\n                    this.setPop()\r\n                },\r\n                (error) =>\r\n                    this.setState({\r\n                        error: error,\r\n                    })\r\n            );\r\n    }\r\n\r\n    setPop(){\r\n        var temp = []\r\n        this.props.questsPopular.map(q => {\r\n            axios\r\n                .get(`https://js-here.firebaseio.com/quests/tourism/${q.id}.json`)\r\n                .then((response) => response.data)\r\n                .then(\r\n                    (data) => {\r\n                        temp.push(data)\r\n                        this.setState({questsPopular: temp})\r\n                    }\r\n                );\r\n        })\r\n        \r\n    }\r\n    \r\n    getQuestsRiddle() {\r\n        var temp = []\r\n        axios\r\n            .get(\"https://js-here.firebaseio.com/quests/riddle.json\")\r\n            .then((response) => response.data)\r\n            .then(\r\n                (data) => {\r\n                    //temp.push(data)\r\n                    console.log(data)\r\n                    Object.keys(data).forEach((key, index) => {\r\n                        temp.push({\r\n                            id: key,\r\n                            index\r\n                        })\r\n                    })\r\n                    console.log(temp)\r\n                    this.props.onQuestsRiddle(temp);\r\n                    this.setState({\r\n                        loadingQuestsRiddle: false\r\n                    })\r\n                    \r\n                    this.setState({loadingQuestsPopular: false})\r\n                    //console.log(this.props.questsPopular)\r\n                },\r\n                (error) =>\r\n                    this.setState({\r\n                        error: error,\r\n                    })\r\n            );\r\n    }\r\n\r\n    getQuestsTeam() {\r\n        // var temp = []\r\n        // axios\r\n        //     .get(\"https://js-here.firebaseio.com/quests/tourism.json\")\r\n        //     .then((response) => response.data)\r\n        //     .then(\r\n        //         (data) => {\r\n        //             //temp.push(data)\r\n        //             Object.keys(data).forEach((key, index) => {\r\n        //                 temp.push({\r\n        //                     id: key,\r\n        //                     index\r\n        //                 })\r\n        //             })\r\n        //             //console.log(temp);\r\n        //             this.props.onQuestsTourism(temp);\r\n        //             this.setState({\r\n        //                 loadingQuestsTourism: false\r\n        //             })\r\n        //         },\r\n        //         (error) =>\r\n        //             this.setState({\r\n        //                 error: error,\r\n        //             })\r\n        //     );\r\n        // this.setState({\r\n        //     quests: temp,\r\n        //     loadingQuestsTourism: false\r\n        // })\r\n    }\r\n    \r\n    render() {\r\n        window.scrollTo(0, 0);\r\n        const {error} = this.state;\r\n        const cardsCount = window.screen.availWidth >= 2560 ? 7 : 8;\r\n        if (error) return <div>Error: {error.message}</div>;\r\n        return (\r\n            <div className=\"page-container\">\r\n                {\r\n                    window.screen.availWidth <= 768\r\n                        ? <div\r\n                            className=\"image-mobile\"\r\n                            id=\"image-mob\"\r\n                        >\r\n                            Если ты хочешь хорошо провести вермя и узнать новый город, то наш сайт создан для тебя\r\n                        </div>\r\n                        : <div className=\"hide-0-to-768\">\r\n                            <RsCarousel/>\r\n                        </div>\r\n                }\r\n                <div className=\"gradient-background\">\r\n                    <div className=\"text-container\">\r\n                        <h1 className=\"caption-text\">Популярные квесты</h1>\r\n                    </div>\r\n                    {this.state.loadingQuestsTourism ? <Loader/> : null}\r\n                    <Grid container justify=\"center\" className=\"margin-bottom\">\r\n                        {\r\n                            this.props.questsTourism\r\n                            .sort(\r\n                                (v1, v2) =>\r\n                                    (v1.rating) - (v2.rating)\r\n                                    //new Date(v1.dateOfCreation) - new Date(v2.dateOfCreation)\r\n                            )\r\n                            .slice(0, cardsCount)\r\n                            .map((quest, index) => {\r\n                                let zIndex = Math.round((1 / (index + 1)) * 100);\r\n                                return (\r\n                                    <Grid\r\n                                        key={index}\r\n                                        item\r\n                                        style={{\r\n                                            width: window.screen.availWidth > 320 ? \"311px\" : \"250px\",\r\n                                            marginRight: \"40px\",\r\n                                            marginLeft: \"0px\",\r\n                                            // zIndex: zIndex,\r\n                                        }}\r\n                                    >\r\n                                        <QuestCard quest={quest}></QuestCard>\r\n                                    </Grid>\r\n                                );\r\n                            })\r\n                            \r\n                        }\r\n                    </Grid>\r\n\r\n                    <div className=\"text-container\">\r\n                        <h1 className=\"caption-text\">Знакомство с городом</h1>\r\n                    </div>\r\n                    {this.state.loadingQuestsTourism ? <Loader/> : null}\r\n                    <Grid container justify=\"center\" className=\"margin-bottom\">\r\n                        {this.props.questsTourism\r\n                            //.filter( quest => quest.city == \"\")\r\n                            .slice(0, cardsCount)\r\n                            .map((quest, index = 100) => {\r\n                                let zIndex = Math.round((1 / (index + 1)) * 100);\r\n                                return (\r\n                                    <Grid\r\n                                        key={index}\r\n                                        item\r\n                                        style={{\r\n                                            width: window.screen.availWidth > 320 ? \"311px\" : \"250px\",\r\n                                            marginRight: \"40px\",\r\n                                            marginLeft: \"0px\",\r\n                                            zIndex: zIndex,\r\n                                        }}\r\n                                    >\r\n                                        <QuestCard quest={quest} index={index}></QuestCard>\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                    </Grid>\r\n                    <div className=\"text-container\">\r\n                        <h1 className=\"caption-text\">Загадки</h1>\r\n                    </div>\r\n                    {this.state.loadingQuestsRiddle ? <Loader/> : null}\r\n                    <Grid container justify=\"center\" className=\"margin-bottom\">\r\n                        {this.props.questsRiddle\r\n                            //.filter( quest => quest.city == \"\")\r\n                            .slice(0, cardsCount)\r\n                            .map((quest, index = 100) => {\r\n                                let zIndex = Math.round((1 / (index + 1)) * 100);\r\n                                return (\r\n                                    <Grid\r\n                                        key={index}\r\n                                        item\r\n                                        style={{\r\n                                            width: window.screen.availWidth > 320 ? \"311px\" : \"250px\",\r\n                                            marginRight: \"40px\",\r\n                                            marginLeft: \"0px\",\r\n                                            zIndex: zIndex,\r\n                                        }}\r\n                                    >\r\n                                        <QuestAreaCard quest={quest}></QuestAreaCard>\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                    </Grid>\r\n                    <div className=\"text-container\">\r\n                        <h1 className=\"caption-text\">Командные квесты</h1>\r\n                    </div>\r\n                    {this.state.loadingQuestsTeam ? <Loader/> : null}\r\n                    <Grid container justify=\"center\" className=\"margin-bottom\">\r\n                        {this.state.questsTeam\r\n                            //.filter( quest => quest.city == \"\")\r\n                            .slice(0, cardsCount)\r\n                            .map((quest, index = 100) => {\r\n                                let zIndex = Math.round((1 / (index + 1)) * 100);\r\n                                return (\r\n                                    <Grid\r\n                                        key={index}\r\n                                        item\r\n                                        style={{\r\n                                            width: window.screen.availWidth > 320 ? \"311px\" : \"250px\",\r\n                                            marginRight: \"40px\",\r\n                                            marginLeft: \"0px\",\r\n                                            zIndex: zIndex,\r\n                                        }}\r\n                                    >\r\n                                        <QuestCard quest={quest}></QuestCard>\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        onQuestsTourism: value => dispatch({type: \"questsTourism\", value: value}),\r\n        onQuestsRiddle: value => dispatch({type: \"questsRiddle\", value: value}),\r\n        onQuestsPopular: value => dispatch({type: \"questsPopular\", value: value}),\r\n        onQuestsTeam: value => dispatch({type: \"questsTeam\", value: value}),\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        questsTourism: state.questsTourism,\r\n        questsRiddle: state.questsRiddle,\r\n        questsPopular: state.questsPopular,\r\n        questsTeam: state.questsTeam,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(HomePage);\r\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass QuestAreaDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quest: {},\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuest()\r\n    }\r\n\r\n    \r\n    \r\n    getQuest() {\r\n        const id = this.props.match.params.id;\r\n        //const url = `${APP_URL_DEV}/api/vacancies/${id}`;\r\n        console.log(id)\r\n        axios\r\n            .get(`https://js-here.firebaseio.com/quests/riddle/${id}.json`)\r\n            .then((response) => response.data)\r\n            .then(\r\n                (data) => {\r\n                    this.props.onTitle(data.title)\r\n                    this.setState({quest: data, loading: false})\r\n                }\r\n            );\r\n        \r\n    }\r\n\r\n    handleStartQuest = () => {\r\n        this.props.onAnswer(null)\r\n        this.props.history.push(`/quests/riddle/${this.props.match.params.id}/questions`)\r\n    };\r\n\r\n    render() {\r\n        const {vacancy, error} = this.state;\r\n        window.scrollTo(0, 0);\r\n        if (error) return <div>Error: {error.message}</div>;\r\n        return (\r\n            <div className=\"container-vac-details\">\r\n                {this.state.loading ? <Loader/>\r\n                    : <>\r\n                        <h3 className=\"header-h\">{this.state.quest.title}</h3>\r\n                        <h5 className=\"city\">{this.state.quest.city}</h5>\r\n                        <div className=\"item-vacancy\">\r\n                            <img src={this.state.quest.img1} className=\"quest-img\" alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"item-vacancy\">\r\n                            <b> Описание квеста:</b>\r\n                            <br/> {this.state.quest.description}\r\n                        </div>\r\n                        <div className=\"item-vacancy\">\r\n                            <b>Время прохождения:</b> {this.state.quest.time}\r\n                        </div>\r\n                        <div className=\"row div-row\" style={{marginLeft: \"0\"}}>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"button-start-quest\"\r\n                                onClick={this.handleStartQuest}\r\n                            >\r\n                                Начать квест\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        onAnswer: value => dispatch({type: \"answer\", value: value}),\r\n        onTitle: value => dispatch({type: \"questName\", value: value})\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispachToProps)(QuestAreaDetails);\r\n","import * as React from 'react';\r\n\r\nexport default class MapArea extends React.Component {\r\n\r\n    getDistanceFromLatLonInM(lat1, lng1, lat2, lng2) {\r\n        var R = 6371; // Radius of the earth in km\r\n        var dLat = this.deg2rad(lat2 - lat1);  // deg2rad below\r\n        var dLon = this.deg2rad(lng2 - lng1);\r\n        var a =\r\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n            Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) *\r\n            Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n        var d = R * c; // Distance in km\r\n        return d * 1000;\r\n    }\r\n\r\n    deg2rad(deg) {\r\n        return deg * (Math.PI / 180)\r\n    }\r\n\r\n    mapRef = React.createRef();\r\n\r\n    state = {\r\n        myCoordinate: null,\r\n        map: null,\r\n        teaser: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.start()\r\n    }\r\n\r\n    start() {\r\n        this.setState({\r\n            teaser: {\r\n                lat: 55.979236, lng: 37.158384, description: \"Загадка\"\r\n            }\r\n        });\r\n                //lat: 55.998339, lng:37.225598, description: \"Загадка\"}});\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                this.setState({ myCoordinate: { lat: position.coords.latitude, lng: position.coords.longitude, description: \"Моя позиция\" } });\r\n                /*this.setState({\r\n                    myCoordinate: {\r\n                        lat: Math.random() % 3 / 1000 + 55.989804,\r\n                        lng: Math.random() % 3 / 1000 + 37.209889,\r\n                        description: \"Моя позиция\"\r\n                    }\r\n                });*/\r\n                this.go();\r\n            });\r\n        } else {\r\n            console.error(\"Geolocation is not supported by this browser!\");\r\n        }\r\n    }\r\n\r\n    go() {\r\n        const H = window.H;\r\n        const platform = new H.service.Platform({\r\n            apikey: \"ksTpcItxmjBO_GYj0B0e-ZQY8MLCuTPmPDI5nvz_ZKc\"\r\n        });\r\n\r\n        const coordinates = [\r\n            this.state.myCoordinate,\r\n            {lat: 55.986281, lng: 37.1705789, description: \"Музей Зеленограда\"},\r\n            {lat: 55.9831656, lng: 37.2099016, description: \"НИУ МИЭТ\"},\r\n            {lat: 55.992649, lng: 37.2195338, description: \"Флейта\"},\r\n            {lat: 55.9985958, lng: 37.2247743, description: \"Общежитие МИЭТ\"},\r\n        ];\r\n\r\n        const defaultLayers = platform.createDefaultLayers();\r\n        const center = {lat: 0, lng: 0};\r\n        coordinates.map(coordinate => {\r\n            center.lat += coordinate.lat / coordinates.length;\r\n            center.lng += coordinate.lng / coordinates.length;\r\n        });\r\n        const map = new H.Map(\r\n            this.mapRef.current,\r\n            defaultLayers.vector.normal.map,\r\n            {\r\n                center: this.state.teaser,\r\n                zoom: 15,\r\n            }\r\n        );\r\n        console.log(this.state.teaser.lat + \" \" + this.state.teaser.lng);\r\n\r\n        const ui = H.ui.UI.createDefault(map, defaultLayers, 'ru-RU');\r\n        const mapEvents = new H.mapevents.MapEvents(map);\r\n        const behavior = new H.mapevents.Behavior(mapEvents);  \r\n\r\n        map.addLayer(defaultLayers.vector.normal.traffic);\r\n        map.addLayer(defaultLayers.vector.normal.trafficincidents);\r\n\r\n        this.setState({map});\r\n\r\n        this.refreshMap();\r\n    }\r\n\r\n    async refreshMap() {\r\n        /*this.setState({\r\n            myCoordinate: {\r\n                lat: 55.990804,\r\n                lng: 37.212889,\r\n                description: \"Моя позиция\"\r\n            }\r\n        });*/        \r\n        if (this.getDistanceFromLatLonInM(this.state.myCoordinate.lat, this.state.myCoordinate.lng, this.state.teaser.lat, this.state.teaser.lng) < 30) {\r\n            alert(\"You are Winner!\");\r\n        } else {\r\n            const H = window.H;\r\n            const platform = new H.service.Platform({\r\n                apikey: \"ksTpcItxmjBO_GYj0B0e-ZQY8MLCuTPmPDI5nvz_ZKc\"\r\n            });\r\n            const defaultLayers = platform.createDefaultLayers();\r\n            const ui = H.ui.UI.createDefault(this.state.map, defaultLayers, 'ru-RU');\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(position => {\r\n                    this.setState({ myCoordinate: { lat: position.coords.latitude, lng: position.coords.longitude, description: \"Моя позиция\" } });\r\n                    /*this.setState({\r\n                        myCoordinate: {\r\n                            lat: Math.random() % 3 / 1000 + 55.989804,\r\n                            lng: Math.random() % 3 / 1000 + 37.209889,\r\n                            description: \"Моя позиция\"\r\n                        }\r\n                    });*/\r\n                    const markerTeaser = new H.map.Marker(this.state.teaser);\r\n                    this.state.map.addObject(markerTeaser);\r\n\r\n                    const markerGPS = new H.map.Marker(this.state.myCoordinate);\r\n                    const coordinate = this.state.myCoordinate;\r\n                    markerGPS.addEventListener('tap', function (evt) {\r\n                        const bubble = new H.ui.InfoBubble(coordinate, {\r\n                            content: `<p>${coordinate.description}</p>`\r\n                        });\r\n                        ui.addBubble(bubble);\r\n                    })\r\n                    this.state.map.addObject(markerGPS);\r\n                });               \r\n            } else {\r\n                console.error(\"Geolocation is not supported by this browser!\");\r\n            }\r\n            var offset = 637100;\r\n            var distance = this.getDistanceFromLatLonInM(this.state.myCoordinate.lat, this.state.myCoordinate.lng, this.state.teaser.lat, this.state.teaser.lng) / offset;\r\n            var maxDRadius = distance / 6;\r\n            var radius = 2 * maxDRadius;\r\n            var a = Math.random() % 360;\r\n            var lat = this.state.teaser.lat + Math.cos(a) * radius;\r\n            var lng = this.state.teaser.lng + Math.sin(a) * radius;\r\n            \r\n            console.log(lat + \" \" + lng + \" \" + (radius * offset) + \" \" + (distance) * offset);\r\n\r\n            var newCircle = new H.map.Circle(\r\n                new H.geo.Point(lat, lng), radius * offset,\r\n                {style: {fillColor: 'rgba(221, 0, 255, 0.66)'}}\r\n            );\r\n            this.state.map.removeObjects(this.state.map.getObjects());\r\n            this.state.map.addObject(newCircle);\r\n            await new Promise(resolve => setTimeout(resolve, 10000));\r\n            this.refreshMap();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.state.map.dispose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.mapRef} style={{height: \"500px\"}}/>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport Map from \"../Map/Map\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {connect} from \"react-redux\";\r\nimport QuestCurrentTask from \"../QuestCurrentTask/QuestCurrentTask\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport MapArea from \"../MapArea/MapArea\";\r\n\r\nclass QuestTasks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            errorMes: false,\r\n            buttonText: \"Ответить на вопрос\",\r\n            isNext: false,\r\n            tasks: [],\r\n            curTask: {},\r\n            curId: 0,\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTasks();\r\n    }\r\n\r\n    getTasks() {\r\n        const id = this.props.match.params.id\r\n        var temp = []\r\n        axios\r\n            .get(`https://js-here.firebaseio.com/quests/riddle/${id}.json`)\r\n            .then((response) => response.data)\r\n            .then(\r\n                (data) => {\r\n\r\n                    this.setState({tasks: data, loading: false})\r\n                    this.props.onCountQuestions(1)\r\n                    //this.getCurTask()\r\n                }\r\n            );\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (this.props.answer === null)\r\n            this.setState({errorMes: true})\r\n        else {\r\n            this.setState({errorMes: false})\r\n            this.props.onDesc(true)\r\n            if (this.props.isRight)\r\n                this.props.onCountRightAns(this.props.countRightAns + 1)\r\n            if (this.state.isNext) {\r\n                this.setState({buttonText: \"Ответить на вопрос\", isNext: false})\r\n                if (this.state.curId === this.state.tasks.length - 1)\r\n                    this.props.history.push(`/quests/tourism/${this.props.match.params.id}/questions/result`)\r\n                else {\r\n                    this.state.curId = this.state.curId + 1\r\n                    this.getCurTask()\r\n                }\r\n            } else {\r\n                if (this.state.curId === this.state.tasks.length - 1)\r\n                    this.setState({buttonText: \"Завершить квест\", isNext: true})\r\n                else this.setState({buttonText: \"Следующее задание\", isNext: true})\r\n                this.props.onFlag(false)\r\n                this.props.onDesc(false)\r\n            }\r\n\r\n            //this.props.history.push(window.location.href + \"/\")\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {curTask, error} = this.state;\r\n\r\n        if (error) return <div>Error: {error.message}</div>;\r\n        return (\r\n            <div className=\"container-vac-details\">\r\n                {this.state.loading\r\n                    ? <Loader/>\r\n                    :\r\n                    <>\r\n                        <h3 className=\"header-task\">{this.state.tasks.title}</h3>\r\n                        <h5 className=\"question\">{this.state.tasks.description_task}</h5>\r\n                        <MapArea/>\r\n                    </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        onFlag: value => dispatch({type: \"isRight\", value: value}),\r\n        onDesc: value => dispatch({type: \"isDesc\", value: value}),\r\n        onCountRightAns: value => dispatch({type: \"countRightAns\", value: value}),\r\n        onCountQuestions: value => dispatch({type: \"countQuestions\", value: value}),\r\n        onCoors: value => dispatch({type: \"currentCoors\", value: value}),\r\n        onRefresh: value => dispatch({type: \"isRefresh\", value: value}),\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isRight: state.isRight,\r\n        answer: state.answer,\r\n        countRightAns: state.countRightAns,\r\n        currentCoors: state.currentCoors,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(QuestTasks);\r\n","import React, {Component} from 'react';\r\nimport {Route} from 'react-router';\r\nimport QuestDetails from './components/QuestDetails/QuestDetails';\r\nimport QuestTasks from './components/QuestTasks/QuestTasks';\r\nimport AboutQuest from \"./components/AboutQuest/AboutQuest\";\r\nimport AboutUs from \"./components/AboutUs/AboutUs\";\r\nimport QuestFinish from './components/QuestFinish/QuestFinish';\r\nimport {Layout} from './components/Layout/Layout';\r\nimport HomePage from './containers/HomePage/HomePage';\r\nimport QuestAreaDetails from \"./components/QuestAreaDetails/QuestAreaDetails\";\r\nimport QuestAreaTasks from \"./components/QuestAreaTasks/QuestAreaTasks\";\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n    static displayName = App.name;\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Route exact path='/' component={HomePage}/>\r\n                <Route exact path='/aboutquest' component={AboutQuest}/>\r\n                <Route exact path='/aboutus' component={AboutUs}/>\r\n                <Route exact path='/quests/tourism/:id' component={QuestDetails}/>\r\n                <Route exact path='/quests/riddle/:id' component={QuestAreaDetails}/>\r\n                <Route exact path='/quests/riddle/:id/questions' component={QuestAreaTasks}/>\r\n                <Route exact path='/quests/tourism/:id/questions' component={QuestTasks}/>\r\n                <Route exact path='/quests/tourism/:id/questions/result' component={QuestFinish}/>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\r\n    isRight: \"\",\r\n    user: null,\r\n    role:\"\",\r\n    answer: null,\r\n    isDesc: true,\r\n    questsTourism: [],\r\n    questsPopular: [],\r\n    questsRiddle: [],\r\n    questsTeam: [],\r\n    countRightAns: 0,\r\n    countQuestions: 0,\r\n    questName: null,\r\n    currentCoors: [],\r\n    isRefresh: false,\r\n    loadingTask: true,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = { ...state };\r\n\r\n    switch (action.type) {\r\n        case 'isRight':\r\n            newState.isRight = action.value;\r\n            break;\r\n        case 'role':\r\n            newState.role = action.value;\r\n            break;\r\n        case 'answer':\r\n            newState.answer = action.value;\r\n            break;\r\n        case 'isDesc':\r\n            newState.isDesc = action.value;\r\n            break;\r\n        case 'questsTourism':\r\n            newState.questsTourism = action.value;\r\n            break;\r\n        case 'questsPopular':\r\n            newState.questsPopular = action.value;\r\n            break;\r\n        case 'questsRiddle':\r\n            newState.questsRiddle = action.value;\r\n            break;\r\n        case 'questsTeam':\r\n            newState.questsTeam = action.value;\r\n            break;\r\n        case 'countRightAns':\r\n            newState.countRightAns = action.value;\r\n            break;\r\n        case 'countQuestions':\r\n            newState.countQuestions = action.value;\r\n            break;\r\n        case 'questName':\r\n            newState.questName = action.value;\r\n            break;\r\n        case 'currentCoors':\r\n            newState.currentCoors = action.value;\r\n            break;\r\n        case 'isRefresh':\r\n            newState.isRefresh = action.value;\r\n            break;\r\n        case 'loadingTask':\r\n            newState.loadingTask = action.value;\r\n            break;\r\n    }\r\n    return newState;\r\n};\r\n\r\nexport default reducer;","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport reducer from './store/reducer';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport {createStore} from 'redux';\r\n\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={baseUrl}>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}